package com.ngbj.wallpaper.bean.greenBeanDao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ngbj.wallpaper.bean.entityBean.HistoryBean;
import com.ngbj.wallpaper.bean.entityBean.WallpagerBean;
import com.ngbj.wallpaper.bean.entityBean.DownBean;
import com.ngbj.wallpaper.bean.entityBean.LoginBean;
import com.ngbj.wallpaper.bean.entityBean.TestBean;

import com.ngbj.wallpaper.bean.greenBeanDao.HistoryBeanDao;
import com.ngbj.wallpaper.bean.greenBeanDao.WallpagerBeanDao;
import com.ngbj.wallpaper.bean.greenBeanDao.DownBeanDao;
import com.ngbj.wallpaper.bean.greenBeanDao.LoginBeanDao;
import com.ngbj.wallpaper.bean.greenBeanDao.TestBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig historyBeanDaoConfig;
    private final DaoConfig wallpagerBeanDaoConfig;
    private final DaoConfig downBeanDaoConfig;
    private final DaoConfig loginBeanDaoConfig;
    private final DaoConfig testBeanDaoConfig;

    private final HistoryBeanDao historyBeanDao;
    private final WallpagerBeanDao wallpagerBeanDao;
    private final DownBeanDao downBeanDao;
    private final LoginBeanDao loginBeanDao;
    private final TestBeanDao testBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        historyBeanDaoConfig = daoConfigMap.get(HistoryBeanDao.class).clone();
        historyBeanDaoConfig.initIdentityScope(type);

        wallpagerBeanDaoConfig = daoConfigMap.get(WallpagerBeanDao.class).clone();
        wallpagerBeanDaoConfig.initIdentityScope(type);

        downBeanDaoConfig = daoConfigMap.get(DownBeanDao.class).clone();
        downBeanDaoConfig.initIdentityScope(type);

        loginBeanDaoConfig = daoConfigMap.get(LoginBeanDao.class).clone();
        loginBeanDaoConfig.initIdentityScope(type);

        testBeanDaoConfig = daoConfigMap.get(TestBeanDao.class).clone();
        testBeanDaoConfig.initIdentityScope(type);

        historyBeanDao = new HistoryBeanDao(historyBeanDaoConfig, this);
        wallpagerBeanDao = new WallpagerBeanDao(wallpagerBeanDaoConfig, this);
        downBeanDao = new DownBeanDao(downBeanDaoConfig, this);
        loginBeanDao = new LoginBeanDao(loginBeanDaoConfig, this);
        testBeanDao = new TestBeanDao(testBeanDaoConfig, this);

        registerDao(HistoryBean.class, historyBeanDao);
        registerDao(WallpagerBean.class, wallpagerBeanDao);
        registerDao(DownBean.class, downBeanDao);
        registerDao(LoginBean.class, loginBeanDao);
        registerDao(TestBean.class, testBeanDao);
    }
    
    public void clear() {
        historyBeanDaoConfig.getIdentityScope().clear();
        wallpagerBeanDaoConfig.getIdentityScope().clear();
        downBeanDaoConfig.getIdentityScope().clear();
        loginBeanDaoConfig.getIdentityScope().clear();
        testBeanDaoConfig.getIdentityScope().clear();
    }

    public HistoryBeanDao getHistoryBeanDao() {
        return historyBeanDao;
    }

    public WallpagerBeanDao getWallpagerBeanDao() {
        return wallpagerBeanDao;
    }

    public DownBeanDao getDownBeanDao() {
        return downBeanDao;
    }

    public LoginBeanDao getLoginBeanDao() {
        return loginBeanDao;
    }

    public TestBeanDao getTestBeanDao() {
        return testBeanDao;
    }

}
